<chapter id="workingwithdata">
<title>Working With Data</title>

<sect1 id="datasources">
<title>Data Sources</title>

<sect2 id="fileformats">
<title>Supported File Formats</title>
<para>
Currently, Kst supports ASCII text files,
<ulink url="http://getdata.sourceforge.net/">dirfiles</ulink>, and
<ulink url="http://www.unidata.ucar.edu/software/netcdf/">NetCDF</ulink>,
for vectors and scalars, and FITS images, BIT image streams,
16 bit TIFF images, and any image format supported by 
<ulink url="http://doc.qt.io/qt-5/qimage.html">QImage</ulink>,
 (jpg, png, bmp, etc) for images.
</para>
</sect2>

<sect2 id="DataSourceConcepts">
<title>Data Source Concepts</title>
<para>
A data source in &kst; is simply a supported data file.
The following concepts are important in understanding how &kst; works with
different data sources.
Some terminology is also introduced in this section.
</para>

<sect3 id="DefineFields">
<title>Fields</title>
<para>
  Data in &kst; are accessed by field names.  A field name can refer to a single scalar or string, to a vector of values from a single sensor,
  or to a matrix.  For example, a column in an ASCII data file can be read in 
  as a vector.  An image in a png file can be read in as a matrix.  
  Datasource readers provide functions for reading and obtaining fields and 
  field names.
</para>
</sect3>

<sect3 id="Frames">
<title>Frames</title>
<para>
When reading in a vector from a data source field, data are addressed by their Frame number, not by their sample number.  Each field in a data source has its own fixed number of samples per frame.
</para>
<para>
For some data sources (eg, ASCII files) every frame contains exactly one sample (ie, for ASCII files, a frame is a valid row of data, and every row has exactly one sample for each field).  
</para>
<para>
However, for other data sources (eg, dirfiles), there may be multiple samples per frame.  In the illustration below, the first 3 frames of an imaginary dirfile are shown.  In this particular data file, Field1 has a 1 sample per frame, Field2 has 4 samples per frame, and Field3 has 2 samples per frame.  Every field must have a constant number of samples per frame throughout the file.
</para>
<para>
<inlinemediaobject>
<imageobject>
<imagedata fileref="Diagram-kst-frames.png" format="PNG"/>
</imageobject>
</inlinemediaobject>
</para>

<para>
  In the figure, imagine that time proceeds from top to bottom.  &kst; assumes that the first sample in a frame is simultaneous for every field in the data source, and that the rest of the samples are sampled evenly throughout the frame.  On the other hand, when plotting one vector agains another, &kst; assumes that the first and last samples of each vector are simultaneous, and interpolates the shorter vector up to the resolution of the longer vector.  Since only the first sample in a frame can be assumed to be simultaneous across fields, when &kst; reads data into a vector, it only reads up to the first sample of the last frame requested, so that plotting one vector against another will make sense.  The rest of the last frame will not be read.  So if the first three frames of Field1 and Field2 are read from the data source in the figure, 3 samples will be read from Field1, and 9 samples will be read from Field2 (ending at first sample of Frame 3) - not 12 as one might expect.
</para>
</sect3>

<sect3 id="supportingadditionalfileformatsdatasourceconceptsindex">
<title>INDEX Field</title>
<para>
As well as the explicit data fields in a data file, &kst; implicitly creates an INDEX field for all data sources.  The INDEX field is 1 sample per frame, and simply contains integers from 0 to N-1, where N is the number of frames in the data file.  It is common to plot vectors against INDEX.  This is convenient since  the INDEX of a sample or event is just the frame number, allowing easy identification and retrieval of events from a data file.
</para>
</sect3>

</sect2>

<sect2 id="creatingascii">
<title>ASCII Input Files</title>
<para>
&kst; is capable of reading vectors from a wide range of ASCII formats.  As long as the data are in columns, and as long as each non-comment row has the same number of collumns, &kst; can probably read it.
</para>
<para>
  Consider reading this simple ASCII csv file:  each comma separated column represents a field. 
</para>

<informalexample>
<screen>
Length,Width
m,m
1.1,6.2
2.4,9.3
4.3,4.7
5.2,8.8
</screen>
</informalexample>


<para>
  When you enter an ascii source into a data source selection widget (such as on the first page of the data wizard) the file will be identified as an ASCII file, and the <guibutton>Configure</guibutton> button will be enabled, as shown below.
</para>


<para>
<inlinemediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-datasource-selector.png" format="PNG"/>
</imageobject>
</inlinemediaobject>
</para>

<para>
  Clicking on <guibutton>Configure</guibutton> will bring up the ASCII data source configuration dialog.
</para>

<para>
<inlinemediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-ascii-config.png" format="PNG"/>
</imageobject>
</inlinemediaobject>
</para>

<para>
  Note that the first few lines of the file are shown.  The dialog in the screen shot has been filled out to read this file: looking at the first lines of the file, we see that data starts at line 3, line 1 holds the field names, and line 2 holds the units (which will be used by &kst; in plot labels).  Additionally, as this is a csv file, a <literal>,</literal> has been selected as the Custom delimiter.  Selecting <guilabel>OK</guilabel> will permanently assign this configuration to this file, until it is changed again in this dialog, or until <guimenuitem>Clear datasource settings</guimenuitem> in the <guimenu>Settings</guimenu> menu is selected.
</para>

<para>
</para>

</sect2>
</sect1>

<sect1 id="datamanager">
<title>The Data Manager</title>
<para>
The Data Manager provides a central location for deleting and modifying all the data objects used in &kst;.
It can be accessed by selecting <guimenuitem>Data Manager</guimenuitem> from the <guimenu>Tools</guimenu> menu or by clicking the  

<inlinemediaobject>
<imageobject>
<imagedata fileref="Icon-kst-datamanager.png" format="PNG"/>
</imageobject>
</inlinemediaobject>

icon in the tool bar.
</para>

<screenshot>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-datamanager.png" format="PNG"/>
</imageobject>
</mediaobject>
</screenshot>

<para>
  The window lists all data object currently loaded in kst, as well as their type and basic properties.  To edit an object, double click on it, or select it and click the <guibutton>Edit</guibutton> button.  It will bring up the appropriate edit dialog.  Items that have child-vectors can be expanded to list them.  Items also have right button context menus with common tasks for the items, such as making curves or power spectra from vectors, or adding curves to plots.
</para>

<para>
  Items can also be deleted from this dialog by selecting them and clicking <guibutton>Delete</guibutton>.  This will delete the selected item and all items which depend on it.  So if you delete a vector, all curves, spectra, historgrams, or equations that depend on it will also be deleted.  Be careful, because this can not be undone.
</para>
<para>
  Clicking the <guibutton>Purge</guibutton> will remove all undisplayed data objects.  If deleting an object (and everthing that depends on it) will not change any plots or labels, then it is deleted.  Nothing that is displayed is deleted.  This can not be undone.
</para>

</sect1>

<sect1 id="datatypes">
<title>Data Types</title>

<para>
  Plots in &kst; are created by building up objects into the displayed curves.  In &kst;, there are 5 major classes: 
</para>
<itemizedlist>
<listitem>
<para>
  Data Sources: these provide Primitives with access to data files.
</para>
</listitem>
<listitem>
<para>
  Primitives: These are basic data types, including Strings, Scalars (which are single numbers), Vectors (which are ordered lists of numbers) and Matrices (which are 2D arrays of numbers).
</para>
</listitem>
<listitem>
<para>
  Relations: these objects describe how vectors or matrices are displayed in a plot.  They include Curves (which display an XY pair of vectors) and Images (which display matrices).
</para>
</listitem>
<listitem>
<para>
  Data Objects: these classes take Primitives as inputs, process them, and output Primitives.  These include Spectra, Histograms, Equations, Fits, Filters, and other Plugins.
</para>
</listitem>
<listitem>
<para>
  View Items: these are objects that can be drawn, and include plots, labels, lines, etc.  Plots can display Relations (curves and images).  Labels can display Scalars and Strings.
</para>
</listitem>
</itemizedlist>

<para>
  As an example of how these various classes work together, consider the example session in the chapter on 
  <link linkend="filters">Filters</link>.  In this session, a curve from a data file was plotted, along with a low pass filtered version of the curve. The resulting data structures are as follows:
</para>


<para>
<inlinemediaobject>
<imageobject>
<imagedata fileref="Diagram-datatypes-example.png" format="PNG"/>
</imageobject>
<textobject>
<phrase>&kst; Data Types</phrase>
</textobject>
</inlinemediaobject>
</para>

<para>
  The plot displays two curves.  One curve takes two data vectors (INDEX and Column 2) as inputs.  The other takes INDEX as its X vector, and the ouput vector of the Low Pass Filter as its Y vector.  The low pass filter takes the Column 2 vector, and two Scalars as its inputs.  The two data vectors get their data from the Data Source.
</para>

<para>
  The data manager for this sessions is shown below. Note that the literal scalars [4 (X30)] and [0.05 (X29)] are not listed.  To keep things clean, and because '4' is not editable, literal scalars like this are not presented in the UI.
</para>

<screenshot>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-datamanager2.png" format="PNG"/>
</imageobject>
</mediaobject>
</screenshot>

<para>
  This structure could have been chained together further.  For example, the output of the Filter could have been used as the input to a Histogram, and the Histogram of the output of the filtered data could have been plotted instead.
</para>

<para>
Descriptions of each data type are provided below.
</para>

<sect2 id="vectors">
<title>Vectors</title>
<para>
Vectors are ordered lists of numbers.  They are used as the inputs to Data Objects.  They are also used to define the X or Y axis for curves.  While different types of vectors are created in different ways, they can call be used in Data Objects or curves in the same way.
</para>

<para>
  
<itemizedlist>
<listitem>
<para>
  Data Vectors aquire their data from Data Sources (aka, files).  They can be created from the <guimenuitem>Vector</guimenuitem> option in the <guimenu>Create</guimenu> menu, or by selecting the
  
<inlinemediaobject>
<imageobject>
<imagedata fileref="Icon-kst-vectornew.png" format="PNG"/>
</imageobject>
</inlinemediaobject>

  icon in any vector selector.  
</para>
</listitem>
<listitem>
<para>
  Generated Vectors are lists of equally spaced numbers whose range and spacing is defined in the GUI.  They can be created from the <guimenuitem>Vector</guimenuitem> option in the <guimenu>Create</guimenu> menu, or by selecting the
  
<inlinemediaobject>
<imageobject>
<imagedata fileref="Icon-kst-vectornew.png" format="PNG"/>
</imageobject>
</inlinemediaobject>

  icon in any vector selector.  
</para>
</listitem>
<listitem>
<para>
  Editable Vectors have their data defined through the Python interface.  They can not be created or edited in the GUI.
</para>
</listitem>
<listitem>
<para>
   Output Vectors are the output of data objects, such as histograms or filters.  
</para>
</listitem>
</itemizedlist>
  
</para>

</sect2>

<sect2 id="curves">
<title>Curves</title>
<para>
Curves used to create plottable objects from vectors.  Curves are created from two vectors - an <quote>X axis vector</quote> and a <quote>Y axis vector</quote>.  These two vectors are interpreted as a set of (X,Y) pairs to be plotted.  When the X and Y vectors have the same length, the interpretation is obvious.  If, however, the X vector is of a different length than the Y vector, then the first and last points of each are assumed to represent the first and last (X,Y) pair, and the shorter vector is resampled using linear interpolation to have the same number of samples as the longer vector.
</para>
<para>
The following is a screenshot of the window displayed when creating or editing curves.  Explanations of the
settings are listed below.
</para>

<screenshot>
<screeninfo>Edit Curves</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-curvewindow.png" format="PNG" />
</imageobject>
<textobject>
<phrase>Edit Curves</phrase>
</textobject>
</mediaobject>
</screenshot>

<sect3 id="curvecontents">
<title>Curve Contents</title>
<para>
The contents of the curve can be set from this section.
</para>
<variablelist>
<varlistentry>
<term>
<guilabel>X axis vector</guilabel>
</term>
<listitem>
<para>
The vector to use for the independent (horizontal) axis.
</para>
</listitem>

</varlistentry>

<varlistentry>
<term>
<guilabel>Y axis vector</guilabel>
</term>
<listitem>
<para>
The vector to use for the dependent (vertical) axis.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>+X error bar</guilabel> and <guilabel>+Y error bar</guilabel>
</term>
<listitem>
<para>
The vectors containing error values corresponding to the X axis vector and Y axis vector, respectively.
The vectors should contain the sizes of the error bars in the same order as the data points.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guilabel>Use +<replaceable>X/Y</replaceable> error bar for
-<replaceable>X/Y</replaceable></guilabel></term> <listitem><para>If
this item is checked, the error bars are drawn symmetrically about the
data point. To draw asymmetric error bars in the x or y direction,
uncheck the box, and choose a vector for the length of the error bar
below the data point in the <guilabel>-<replaceable>X/Y</replaceable>
error bar</guilabel> combo box.</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guilabel>-<replaceable>X/Y</replaceable> error
bar</guilabel></term>
<listitem><para>The vector to use for the error bar below the data
point. See the previous entry for more detail on using asymmetric
error bars.</para>
</listitem>
</varlistentry>

</variablelist>
</sect3>
</sect2>

<sect2 id="equations">
<title>Equations</title>
<para>
An equation data object consists of a mathematical expression and an independent variable.  The expression
is built using a combination of scalars, vectors, and operators, and usually represents the values of the
dependent variable.  The independent variable can be an existing vector or it can be generated when the equation
object is created or edited.  Since an equation ultimately consists of a set of data points, an equation object
is plottable.
</para>
<para>
The following is a screenshot of the window displayed when creating or editing equations.  Explanations of the
settings are listed below.
</para>

<screenshot>
<screeninfo>Edit Equation</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-equationwindow.png" format="PNG" />
</imageobject>
<textobject>
<phrase>Edit Equation</phrase>
</textobject>
</mediaobject>
</screenshot>

<sect3 id="equation">
<title>Equation</title>
<para>
The mathematical expression representing the dependent variable can be modified from this section.
</para>

<variablelist>
<varlistentry>
<term>
<guilabel>Operators</guilabel>
</term>
<listitem>
<para>
A list of available operators.  Choosing an operator from the list inserts the operator at the current
insertion point in the <guilabel>Equation</guilabel> text box.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Vectors</guilabel>
</term>
<listitem>
<para>
A list of the current vector objects in &kst;.  Choosing a vector from the list inserts the vector at the current
insertion point in the <guilabel>Equation</guilabel> text box.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Scalars</guilabel>
</term>
<listitem>
<para>
A list of the available scalar values.  This list is composed of both the scalar values in the current &kst;
session as well as some built-in constants.  Choosing a scalar from the list inserts the scalar at the current
insertion point in the <guilabel>Equation</guilabel> text box.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Equation</guilabel>
</term>
<listitem>
<para>
The mathematical expression representing the independent variable.  You may manually type in this text box or
you may select items to insert using the above drop-down lists.
</para>
</listitem>
</varlistentry>
</variablelist>
</sect3>


<sect3 id="independentvariable">
<title>Independent Variable</title>
<para>
<!-- TODO: Note that the independent variable is x. Maybe give some -->
<!-- simple examples -->
This section is used to specify the source of the values for the independent variable.
</para>
<variablelist>

<varlistentry>
<term>
<guilabel>Use</guilabel>
</term>
<listitem>
<para>
Select this option to use an existing vector as the independent variable. Select a vector from the
drop-down list, or quickly create a new one by clicking the button to the right.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Interpolate to highest resolution vector</guilabel>
</term>
<listitem>
<para>
Selecting this option interpolates the selected vector to the greatest number of samples possible.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Generate</guilabel>
</term>
<listitem>
<para>
Select this to generate a set of values to use as the independent variable. Specify the lowest value
to generate in the <guilabel>From</guilabel> field, and the highest value to generate in the <guilabel>to</guilabel> field.
Set the value for <guilabel>Number of samples</guilabel> to be the number of equally spaced values to generate between the
lowest value and the highest value (inclusive).
</para>
</listitem>
</varlistentry>

</variablelist>
</sect3>

</sect2>

<sect2 id="Histograms">
<title>Histograms</title>
<para>
A histogram data object simply represents a histogram of a particular vector.  Histogram objects are plottable.
</para>
<para>
The following is a screenshot of the window displayed when creating or editing histograms.  Explanations of the
settings are listed below.
</para>

<screenshot>
<screeninfo>Edit Equation</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-histogramwindow.png" format="PNG" />
</imageobject>
<textobject>
<phrase>Edit Equation</phrase>
</textobject>
</mediaobject>
</screenshot>

<sect3 id="histogramproperties">
<title>Histogram Properties</title>
<para>
The source vector, as well as basic histogram properties, can be modified from this section.
You can either manually specify settings or use the <guibutton>Auto Bin</guibutton> button.
</para>

<variablelist>
<varlistentry>
<term>
<guilabel>Data vector</guilabel>
</term>
<listitem>
<para>
The data vector to create the histogram from.  Although a vector is needed to create a histogram, the
vector is treated as an unordered set for the purposes of creating a histogram.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>From</guilabel> and <guilabel>to</guilabel>
</term>
<listitem>
<para>
The <guilabel>From</guilabel> field contains the left bound for the leftmost bin in the histogram.
The <guilabel>to</guilabel> field contains the right bound for the rightmost bin in the histogram.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Num bins</guilabel>
</term>
<listitem>
<para>
Enter the total number of bins to use in the <guilabel>Num bins</guilabel> field.

</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guibutton>Auto Bin</guibutton>
</term>
<listitem>
<para>
Instead of specifying values for <guilabel>From</guilabel>, <guilabel>to</guilabel>, and
<guilabel>Num bins</guilabel>, you can click <guibutton>Auto Bin</guibutton> to automatically generate
values for all three fields based on the lowest and highest values, as well as the number
of elements found in the source vector.
</para>
</listitem>
</varlistentry>

</variablelist>
</sect3>


<sect3 id="yaxisnormalization">
<title>Y Axis Normalization</title>
<para>
This section is used to specify the type of normalization used for the y axis of the histogram.
</para>
<variablelist>

<varlistentry>
<term>
<guilabel>Number in bin</guilabel>
</term>
<listitem>
<para>
Selecting this option causes the y axis to represent the number of elements in each bin.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Fraction in bin</guilabel>
</term>
<listitem>
<para>
Selecting this option causes the y axis to represent the fraction of elements in each bin
out of the total number of elements.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Percent in bin</guilabel>
</term>
<listitem>
<para>
Selecting this option causes the y axis to represent the percentage of elements (out of the total
number of elements) in each bin.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Peak bin = 1.0</guilabel>
</term>
<listitem>
<para>
Selecting this option causes the y axis to represent the number of elements in each bin divided by
the number of elements in the largest bin (the bin with the greatest number of elements).  In other words,
the y axis is normalized to 1.0.
</para>
</listitem>
</varlistentry>

</variablelist>
</sect3>


</sect2>

<sect2 id="power-spectra">
<title>Power Spectra</title>
<para>
A power spectrum data object represents the power spectrum of a vector, defined as
<quote>the square root of the absolute value of the
mean of the interleaved Fast Fourier Transforms of length <literal>2^x</literal> of the vector</quote>, where x is the
value entered in the <guilabel>FFT Length</guilabel> selection box. The below definitions assume
basic knowledge of power spectra&mdash;for further details,
refer to Numerical Recipes in C: The Art of Scientific Computing, published by Cambridge University Press.
</para>

<screenshot>
<screeninfo>Power Spectra Window</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-powerspectrawindow.png" format="PNG" />
</imageobject>
<textobject>
<phrase>Power Spectra Window</phrase>
</textobject>
</mediaobject>
</screenshot>

<sect3 id="powerspectracurvecontents">
<title>Curve Contents</title>
<para>
The source vector, as well as basic power spectrum properties, can be modified from this section.
</para>

<variablelist>
<varlistentry>
<term>
<guilabel>Data vector</guilabel>
</term>
<listitem>
<para>
The data vector to create a power spectrum from.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Interleaved average</guilabel> and <guilabel>FFT Length</guilabel>
</term>
<listitem>
<para>
Selecting <guilabel>Interleaved average</guilabel> allows the length of the interleaved Fast Fourier
Transforms to be specified.  The length is specified as a power of 2.
  If <guilabel>Interleaved average</guilabel> is unchecked, &kst;
will determine the length based on the length of the vector.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Data units</guilabel> and <guilabel>Rate units</guilabel>
</term>
<listitem>
<para>
The units specified in these textboxes are used for the purpose of auto-generating axes labels for the plots.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guibutton>Sample rate</guibutton>
</term>
<listitem>
<para>
The sample rate is used to generate the X axis of power spectrum plots.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Apodize</guilabel>
</term>
<listitem>
<para>
If this option is selected, the data is apodized using a Hanning window, to reduce bin-to-bin leakage.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Remove Mean</guilabel>
</term>
<listitem>
<para>
Select this option to remove the mean from the selected data (i.e. translate the data so that the mean is zero).
</para>
</listitem>
</varlistentry>

</variablelist>
</sect3>

</sect2>

<sect2 id="plugins">
<title>Plugins</title>
<para>
A plugin data object represents a &kst; plugin.  All plugins have a common format, and show up as type <quote>Plugin</quote>
in the Data Manager.  For more information about plugins, please see <link linkend="pluginsandfilters">Plugins and Filters</link>
</para>
</sect2>

<sect2 id="events">
<title>Event Monitors</title>
<para>
An event monitor data object represents an instance of an event monitor.  For more information on monitoring of events, see
<link linkend="eventmonitoring">Event Monitoring</link>.
</para>
</sect2>


<sect2 id="arrays">
<title>Matrices</title>
<para>
A matrix represents a set of three-dimensional data points (x, y, z) arranged in a two-dimensional grid.
The z values of the matrix are obtained from a vector, and the grid structure is manually specified using
the Edit or New Matrix dialog.  The descriptions below refer to the following diagram depicting
&kst;'s matrix structure.
</para>
<para>
<inlinemediaobject>
<imageobject>
<imagedata fileref="Diagram-kst-matrix.png" format="PNG"/>
</imageobject>
</inlinemediaobject>
</para>
<para>
A screenshot and explanation of the matrix dialog follow.
</para>
<screenshot>
<screeninfo>Matrix Window</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-matrixwindow.png" format="PNG" />
</imageobject>
<textobject>
<phrase>Matrix Window</phrase>
</textobject>
</mediaobject>
</screenshot>

<sect3 id="arrayvectorselection">
<title>Vector Selection</title>

<variablelist>
<varlistentry>
<term>
<guilabel>Z Vector</guilabel>
</term>
<listitem>
<para>
The data vector to obtain the z values from.
</para>
</listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="arraygridparameters">
<title>Grid Parameters</title>

<variablelist>
<varlistentry>
<term>
<guilabel>X Minimum</guilabel> and <guilabel>Y Minimum</guilabel>
</term>
<listitem>
<para>
The origin of the matrix is specified by the coordinates (X Minimum, Y Minimum).
The location of the origin is represented by a red circle in the above diagram.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>X Step Size</guilabel> and <guilabel>Y Step Size</guilabel>
</term>
<listitem>
<para>
These two values specify the dimensions of each rectangular cell in the matrix grid. All cells
in the matrix have identical dimensions.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Dimensions</guilabel> and <guilabel>Use maximum x length</guilabel>
</term>
<listitem>
<para>
Enter the number of steps for the x dimension of the matrix, followed by the number of
steps for the y dimension of the matrix.  If <guilabel>Use maximum x length</guilabel> is
checked, the x dimension of the matrix will be determined based on the length of the vector
and the entered y dimension.  If this option is checked and the length of the vector
subsequently changes, the x dimension of the matrix will be updated accordingly.
</para>
<para>
Note that the minimum allowed y dimension is 1, while the minimum allowed x dimension is 0.
</para>
</listitem>
</varlistentry>
</variablelist>
</sect3>

</sect2>

<sect2 id="images">
<title>Images</title>
<para>
Images are graphical representations of <link linkend="arrays">Matrices</link>.  Images can be plotted
as color maps, contour maps, or both.
</para>
<screenshot>
<screeninfo>Image Window</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="Screenshot-kst-imagewindow.png" format="PNG" />
</imageobject>
<textobject>
<phrase>Image Window</phrase>
</textobject>
</mediaobject>
</screenshot>

<sect3 id="imagearrayselection">
<title>Matrix Selection</title>

<variablelist>
<varlistentry>
<term>
<guilabel>Matrix</guilabel>
</term>
<listitem>
<para>
Select the matrix to use for this image.  New matrices can be created by clicking on the button to the right.
</para>
</listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="imageimagetype">
<title>Image Type</title>

<variablelist>
<varlistentry>
<term>
<guilabel>Color Map</guilabel>, <guilabel>Contour Map</guilabel>, and <guilabel>Color Map and Contour Map</guilabel>
</term>
<listitem>
<para>
Select the type of image to be plotted. Changing this selection enables or disables sections of the image dialog
as appropriate.
</para>
</listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="imagecolormapparameters">
<title>Color Map Parameters</title>
<para>
A color map represents the z value of each cell in the matrix using a color. This section is only available
if <guilabel>Color Map</guilabel> or <guilabel>Color Map and Contour Map</guilabel> is selected under
<guilabel>Image Type</guilabel>.
</para>

<variablelist>
<varlistentry>
<term>
<guilabel>Color palette</guilabel>
</term>
<listitem>
<para>
Select the color palette to use for the color map. By default, two palettes suitable for color maps are installed
by &kst;&mdash;Kst Grayscale 256 (a 256 color grayscale palette) and Kst Spectrum 1021 (a 1021 color rainbow
spectrum that ranges from blue to red). Additional palettes can be installed by simply copying
<productname>GIMP</productname> compatible palette files to the <filename>colors</filename> subdirectory of
the user configuration directory (for example, <filename>/usr/share/config/colors/</filename>).  Note that
saved images using a non-default palette may not be viewable by other users of &kst; if they do not have
the required palette. In such cases, a default grayscale palette is used instead.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Lower Z threshold</guilabel>, <guilabel>Upper Z threshold</guilabel> and <guibutton>Auto Threshold</guibutton>
</term>
<listitem>
<para>
Enter the lower and upper thresholds to use for the mapping of colors.  Palette colors are evenly distributed
between <guilabel>Lower Z threshold</guilabel> and <guilabel>Upper Z threshold</guilabel>.  Any cells in the
selected matrix with z values less than <guilabel>Lower Z threshold</guilabel> are mapped to the first color in the palette.
Any cells in the selected matrix with z values greater than <guilabel>Upper Z threshold</guilabel> are mapped
to the last color in the palette.  Clicking <guibutton>Auto Threshold</guibutton> will fill in the
lower and upper threshold values using the least and greatest z values found in the selected matrix.
</para>
</listitem>
</varlistentry>
</variablelist>
</sect3>

<sect3 id="imagecontourmapparameters">
<title>Contour Map Parameters</title>
<para>
A contour map draws a set of lines, with each line representing a certain z value. This section is only available
if <guilabel>Contour Map</guilabel> or <guilabel>Color Map and Contour Map</guilabel> is selected under
<guilabel>Image Type</guilabel>.
</para>

<variablelist>
<varlistentry>
<term>
<guilabel>Number of contour levels</guilabel>
</term>
<listitem>
<para>
Select the number of contour levels to use.  The contour levels will be distributed evenly between the lowest
and highest z values found in the matrix.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guibutton>Color</guibutton>
</term>
<listitem>
<para>
Select the color to use for the contour lines.  Clicking this button displays a standard &kde; color chooser
dialog.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<guilabel>Weight</guilabel> and <guilabel>Use variable line weight</guilabel>
</term>
<listitem>
<para>
Select the weight, or <quote>thickness</quote> of the contour lines.  If <guilabel>Use variable line weight</guilabel>
is selected, contour lines representing higher elevations are drawn thicker than those representing lower elevations.
Use discretion when selecting this option, as images with high contour line densities may become unreadable.
</para>
</listitem>
</varlistentry>

</variablelist>
</sect3>

</sect2>

</sect1>


<sect1 id="thedatamenu">
<title>The Data Menu</title>
<para>
The <guimenu>Data</guimenu> menu provides quick access to many features related to data objects in
&kst;.  Most of the menu functions duplicate functions found elsewhere, so only brief descriptions are
provided below.
</para>
<variablelist>
<varlistentry>
<term><guimenuitem>Reload</guimenuitem></term>
<listitem>
<para>
Reloads all data vectors from their source files.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Data Wizard...</guimenuitem></term>
<listitem>
<para>
Displays the Data Wizard.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Data Manager</guimenuitem></term>
<listitem>
<para>
Displays the <link linkend="datamanager">Data Manager</link>.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>New</guimenuitem> [data object]</term>
<listitem>
<para>
Displays the corresponding dialog for creating the data object. Refer to
<link linkend="datatypes">Data Types</link> for descriptions of
each dialog.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>View Scalars</guimenuitem></term>
<listitem>
<para>
Displays a dialog from which the values of all the scalars in the current &kst; session
can be viewed. The dialog is updated dynamically if the values change.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>View Vectors</guimenuitem></term>
<listitem>
<para>
Displays a dialog from which the values in all the current vectors can be viewed. Select
a vector to view using the drop-down list. The dialog
is updated dynamically if the values change.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>View Fit Results</guimenuitem></term>
<listitem>
<para>
Displays a dialog which shows all the resulting values from performed fits. Select
a fit result to view using the drop-down list. The dialog
is updated dynamically if the values change.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guimenuitem>Change Data File</guimenuitem></term>
<listitem>
<para>
Displays a dialog for quickly changing data files that vectors are associated with.   Select the vectors
to change, and then browse to a different data file. Click <guibutton>Apply</guibutton> to save the changes.
</para>
</listitem>
</varlistentry>
</variablelist>

</sect1>
</chapter>


<!-- Keep this comment at the end of the file
Local variables:
mode: xml
sgml-omittag:nil
sgml-shorttag:nil
sgml-namecase-general:nil
sgml-general-insert-case:lower
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:0
sgml-indent-data:true
sgml-parent-document:("index.docbook" "book" "chapter")
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
